<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
             version="2.2">
    <persistence-unit name="restaurant_ejb">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>

        <jta-data-source>java:jboss/datasources/RestaurantAppDSmariaDB</jta-data-source>
<!--        <non-jta-data-source>java:jboss/datasources/RestaurantAppDSmariaDB</non-jta-data-source>-->

        <class>de.marcel.restaurant.ejb.model.Address</class>
        <class>de.marcel.restaurant.ejb.model.Culinary</class>
        <class>de.marcel.restaurant.ejb.model.Meal</class>
        <class>de.marcel.restaurant.ejb.model.Rating</class>
        <class>de.marcel.restaurant.ejb.model.Restaurant</class>
        <class>de.marcel.restaurant.ejb.model.RestaurantVisit</class>
        <class>de.marcel.restaurant.ejb.model.User</class>

        <properties>
            <property name="eclipselink.target-server" value="JBoss"/>

<!--            create-tables EclipseLink will attempt to execute a CREATE TABLE SQL for each table.If the table already exists, EclipseLink will follow the default behavior of your specific database and JDBC driver combination (when a CREATE TABLE SQL is issued for an already existing table). In most cases an exception is thrown and the table is not created; the existing table will be used. EclipseLink will then continue with the next statement.-->
<!--            create-or-extend-tables EclipseLink will attempt to create tables. If the table exists, EclipseLink will add any missing columns.-->
<!--            drop-and-create-tables EclipseLink will attempt to DROP all tables, then CREATE all tables. If any issues are encountered, EclipseLink will follow the default behavior of your specific database and JDBC driver combination, then continue with the next statement-->
<!--            none (Default) No DDL generated; no schema generated.-->

            <property name="eclipselink.ddl-generation" value="create-or-extend-tables"/>
            <property name="eclipselink.create-ddl-jdbc-file-name" value="createDDL_ddlGeneration.jdbc"/>
            <property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc"/>

<!--            sql-script-->
<!--            both-->
            <property name="eclipselink.ddl-generation.output-mode" value="database"/>

<!--            <property name="eclipselink.logging.level" value="FINE"/>-->
<!--            <property name="eclipselink.logging.level.sql" value="FINE"/>-->
<!--            <property name="eclipselink.logging.parameters" value="true"/>-->

            <property name="eclipselink.deploy-on-startup" value="true"/>
        </properties>

    </persistence-unit>

    <persistence-unit name="restaurant_auth">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>

        <jta-data-source>java:jboss/datasources/RestaurantAppDSmariaDB_auth</jta-data-source>
<!--        <non-jta-data-source>java:jboss/datasources/RestaurantAppDSmariaDB_auth</non-jta-data-source>-->
        <properties>
            <property name="eclipselink.target-server" value="JBoss"/>
            <property name="eclipselink.target-database" value="MySQL"/>
        </properties>

    </persistence-unit>

</persistence>
