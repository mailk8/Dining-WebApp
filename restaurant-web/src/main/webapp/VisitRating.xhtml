<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:a="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions" xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
>

<ui:composition template="WEB-INF/DefaultTemplateTwoColumns.xhtml">
    <f:metadata>
        <f:viewAction action="#{backingBeanVisit.redirectIfWrongState(3, 4)}" />
        <f:viewAction action="#{ratingBean.proxyOnLoad()}" />
    </f:metadata>

    <ui:param name="active" value="Rating" />
    <ui:param name="title" value="Restaurantbesuch bewerten" />

    <ui:define name="titleHeader">
        <h2>#{title}</h2>
    </ui:define>

    <ui:define name="head">
            <!-- Konvertiert Radiobuttons in Sterne -->
            <h:outputStylesheet  library="css" name="starRating.css" />
    </ui:define>

    <ui:define name="mainContent">


        <h:form id="visitRating">
            <h:inputHidden value="#{ratingBean.currentRating.prim}" />
            <p:growl id="dishSelection"  showDetail="false" keepAlive="10000"/>

            <div class="form-group">
<!--ZUSAMMENFASSUNG VISIT-->
                <div class="row" style="padding-bottom: 70px">
                    <div class="col-12">
                        <c:set var="newline" value='\\n' />
                        <c:set var="break" value='&lt;br/&gt;' />
                        <h:outputText value="#{fn:replace(ratingBean.retrospectVisit, newline, break)}" escape="false" />
                    </div>
                </div>

<!--KATEGORIE ESSEN-->
                <div class="row">
                    <div class="col-4">
                        <label for="dish">Kategorie des Gerichts:</label>
                    </div>
                    <div class="col-8">
                        <p:autoComplete id="dish" value="#{ratingBean.currentRating.dish}" a:style="width:100%; !important;" scrollHeight="250"
                                        completeMethod="#{ratingBean.dishesAutocomplete}" var="dish" itemLabel="#{dish.dishName}" itemValue="#{dish}"
                                        converter="#{dishConverter}" queryDelay="50"
                                        forceSelection="true"  required="true" requiredMessage="Bitte eine Gerichtkategorie wählen." />
                    </div>
                </div>
                <br/>

<!-- MEMO Gericht / Rating -->
                <div class="row">
                    <div class="col-4">
                        <label for="dishMemo">Bemerkung zum Gericht:</label>
                    </div>
                    <div class="col-8">
                        <h:inputText id="dishMemo" value="#{ratingBean.currentRating.dishMemo}" class="form-control" ></h:inputText>
                    </div>
                </div>
                <br/>

<!-- MEMO VISIT-->
                <div class="row">
                    <div class="col-4">
                        <label for="memoVisit">Memo zum Besuch:</label>
                    </div>
                    <div class="col-8">
                        <h:inputText id="memoVisit" value="#{ratingBean.currentVisit.memo}" class="form-control" ></h:inputText>
                    </div>
                </div>
                <br/>

<!-- KOSTEN -->
                <div class="row" >
                    <div class="col-4">
                        <label for="price">Kosten:</label>
                    </div>
                    <div class="col-8">
                        <div class="input-group mb-auto">
                            <h:inputText id="price" value="#{ratingBean.currentRating.price}" class="form-control"   converter="commaConverter"
                                onkeydown="return myKeyboadFunction(event);" >
                                <f:ajax event="blur" render="@this pricePopupMs" delay="0"/>
                            </h:inputText>
                            <div class="input-group-append">
                                <span class="input-group-text">€</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" >
                    <div class="col-4">
                         
                    </div>
                    <div class="col-8">
                        <p:messages id="pricePopupMs" for="price" display="text" style="padding-left: 0px; padding-top: 0px;" />
                    </div>
                </div>

<!-- STERNE WERTUNG -->
                <div class="container">
                    <div class="rating-wrap">
                        <div class="center">
                            <fieldset class="rating">
                                <ui:remove>
                                    <!-- UI REPEAT ERZEUGT n RADIOBUTTONS, DIE DURCH DAS CSS AM LABEL IN EINEN STERN UMGEWANDELT WERDEN.-->
                                    <!-- DER VALUE ENTSPRICHT DER WERTIGKEIT DES RADIOBUTTONS UND IST AUCH GLEICHZEITIG SEINE ID.-->
                                    <!-- AUF DIESE ID BEZIEHEN SICH DIE LABELS.-->
                                    <!-- DAS ATTRIBUT CHECKED PRÜFT HIER, OB DER VALUE DES RADIOBUTTONS GLEICH DEM WERT EINES (MÖGLICHERWEISE) -->
                                    <!-- ABGEGEBENEN RATINGS IST UND SETZT DEN ENTSPRECHENDEN BUTTON.-->
                                    <!-- https://balusc.omnifaces.org/2015/10/custom-layout-with-hselectoneradio-in.html -->
                                </ui:remove>

                                <ui:repeat value="#{ratingBean.getStarsString()}" var="item">
                                    <input type="radio" id="#{item}" name="ratingRadio" value="#{item}" checked="#{item eq ratingBean.currentRating.stars ? 'checked' : null}" />
                                    <label for="#{item}" class="full"/>
                                </ui:repeat>

                                <h:commandScript name="setStars" action="#{ratingBean.setStarRating}" render="formStatistics" >
<!--                                    <f:ajax render="divRowVisit" delay="200"/>-->
<!--                                    <f:ajax render="divRowRest" delay="400"/>-->
<!--                                    <f:ajax render="divRowUser" delay="600"/>-->
                                </h:commandScript>
                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>


<!-- BUTTONS -->
            <br/>
            <h:commandButton action="VisitList?faces-redirect=true" actionListener="#{ratingBean.saveVisitBackingBean}" value="Speichern und zur Übersicht" class="btn btn-primary" style="float:left;"/>
        </h:form>
        
        <br/>

    </ui:define>

<!-- STATISTIK -->
    <ui:define name="subContent">

        <h:form id="formStatistics">
            <div class="card" style="width:100%; height:625px; ">
                <h:outputScript>
                    function chartExtender() {
                        //copy the config options into a variable
                        var options = $.extend(true, {}, this.cfg.config);

                        options = {
                            options: {
                                //remove the legend
                                legend: {
                                    display: false
                                },
                                scales: {
                                    // xAxes: [{
                                    //     display: false,
                                    //     type: "time",
                                    //     time: {
                                    //         parser: 'h:mm:ss a',
                                    //         tooltipFormat: 'h:mm:ss a',
                                    //         unit: 'hour',
                                    //         displayFormats: {
                                    //             'hour': 'h:mm:ss a'
                                    //         }
                                    //     }
                                    // }],
                                    yAxes: [{
                                        display: false,
                                        scaleLabel: {
                                            display: false,
                                            labelString: 'Your Y Axis',
                                            fontSize: 13,
                                        }
                                    }]
                                }
                            }
                        };

                        //merge all options into the main chart options
                        $.extend(true, this.cfg.config, options);
                    };
                </h:outputScript>

                <div class="row" id="divRowVisit">
                    <div class="col-12" style="padding-top: 25px; padding-left: 49px; padding-right: 49px; padding-bottom: 60px;  width: 600px; float: left" >
                        <h:outputLabel style="padding-bottom: 20px">So wurde bei diesem Besuch im Durchschnitt bewertet</h:outputLabel>
                        <p:barChart model="#{ratingBean.myModelVisit}" style="width: 95% ; height: 70px ;"/>
                    </div>
                </div>
                <div class="row" id="divRowRest">
                    <div class="col-12" style="padding-top: 25px; padding-left: 49px; padding-right: 49px; padding-bottom: 60px;  width: 600px;  float: left" >
                        <h:outputLabel style="padding-bottom: 20px">#{ratingBean.nameRest} hat jetzt eine Bewertung von</h:outputLabel>
                        <p:barChart model="#{ratingBean.myModelRest}" style="width: 95% ; height: 70px ;"/>
                    </div>
                </div>
                <div class="row" id="divRowUser">
                    <div class="col-12" style="padding-top: 25px; padding-left: 49px; padding-right: 49px; padding-bottom: 60px; width: 600px;  float: left" >
                        <h:outputLabel style="padding-bottom: 20px">Das ist der Durchschnitt aus deinen Restaurantbewertungen</h:outputLabel>
                        <p:barChart model="#{ratingBean.myModelUser}" style="width: 95% ; height: 70px ;"/>
                    </div>
                </div>
            </div>
        </h:form>

        <script type="application/javascript">

            // Verhindert unpassende Eingaben in Währungsfeld
            function myKeyboadFunction(e) {
                console.log("input war: " + String.fromCharCode(e.keyCode) + " " + e.key);
                //  if (e.shiftKey === true ) {
                //     if (e.keyCode  == 9) {
                //         return true;
                //     } return false;
                // }

                // Steuerzeichen 0 - 47 erlaubt

                // Ziffern 48 - 57 erlaubt
                if (58 > e.keyCode) { return true; }

                // Ziffern Nummberblock erlaubt
                if (e.keyCode  > 95 &amp; 106 > e.keyCode) { return true; }

                // Punkt bzw. Komma nur einfach
                if (e.key == ',' || e.key == '.') {
                    const duplicate = document.getElementById("visitRating:price").value;
                    if (duplicate.includes('.') || duplicate.includes(',')) { return false; }
                    else { return true; }
                }

                // Alle Zeichen hinter Ziffern verboten
                if (e.keyCode  > 57) { return false; }

                // SpaceBar verboten
                if (e.keyCode == 32) { return false; }
            }

            // Zeichnet Rating-Sterne
            const radios = document.forms.visitRating.elements.ratingRadio;
            for(let i=0; radios.length > i; i++) {
                // Holt zunächst alle Radiobuttons (Stars) und fügt einen Eventlistener an.
                // OnClick wird das CommandScript setStars aufgerufen, welches das Rating
                // als http Parameter unter dem Namen "paramStarRating" ans Backend schickt.
                // Im Backend wird druch außerdem die Methode setStarRating aufgerufen,
                // die die Parameter wieder auspackt.
                radios[i].addEventListener('click', function () {
                    setStars({ paramStarRating: this.value}); // jeder Ratiobutton erhält einen Eventlistener, mit dem er seinen Value ans Backend senden kann
                })
            }

        </script>

    </ui:define>

    <ui:define name="footer"> </ui:define>

</ui:composition>

</html>