<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:o="http://omnifaces.org/ui"
      xmlns:of="http://omnifaces.org/functions"
      xmlns:b="http://bootsfaces.net/ui">

<!--Die Eingabefelder kann man noch mit BootsFaces in einem Grid in Spalten und Zeilen aufteilen-->
<!--https://showcase.bootsfaces.net/forms/selectOneMenu.jsf-->

    <ui:composition template="WEB-INF/DefaultTemplate.xhtml">

        <ui:param name="active" value="User" />
        <ui:param name="title" value="User anlegen" />

        <ui:define name="mainContent">

            <h2>#{title}</h2>
            <h:form var="w">

                <h:inputHidden value="#{backingBeanUser.current.prim}" />

                <div class="form-group">
                    <label for="firstname">Vor- und Nachname:<h:message for="firstname" class="text-danger" /></label>
                    <h:inputText id="firstname" value="#{backingBeanUser.current.firstname}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>

                    <h:inputText id="lastname" value="#{backingBeanUser.current.lastname}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>
                </div>

                <div class="form-group">
                    <label for="email">E-Mail:<h:message for="email" class="text-danger" /></label>
                    <h:inputText id="email" value="#{backingBeanUser.current.email}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>
                </div>

                <div class="form-group">
                    <label for="phoneNumber">Telefon:<h:message for="phoneNumber" class="text-danger" /></label>
                    <h:inputText id="phoneNumber" value="#{backingBeanUser.current.phoneNumber}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>
                </div>
    <!--Adresse-->
                <div class="form-group">
                    <label for="street">Straße und Hausnummer<h:message for="street" class="text-danger" /></label>
                    <h:inputText id="street" value="#{backingBeanUser.current.addressLiving.street}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>

                    <h:inputText id="houseNumber" value="#{backingBeanUser.current.addressLiving.houseNumber}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>
                </div>

                <div class="form-group">
                    <label for="zipCode">PLZ und Ort:<h:message for="zipCode" class="text-danger" /></label>
                    <h:inputText id="zipCode" value="#{backingBeanUser.current.addressLiving.zipCode}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>

                    <h:inputText id="city" value="#{backingBeanUser.current.addressLiving.city}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>
                </div>

                <div class="form-group">
                    <label for="wgs84Lat">Position Breitengrad und Längengrad:<h:message for="wgs84Lat" class="text-danger" /></label>
                    <h:inputText id="wgs84Lat" value="#{backingBeanUser.current.addressActual.wgs84Latitude}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>

                    <h:inputText id="wgs84Lon" value="#{backingBeanUser.current.addressActual.wgs84Latitude}" class="form-control" required="false" requiredMessage="Erforderlich!">
                        <!-- <f:validator validatorId="customValidator" />-->
                    </h:inputText>
                </div>

    <!--Culinaries            -->
                <!-- equals, hashcode und toString müssen implementiert sein-->
                <!-- https://stackoverflow.com/questions/17343032/implement-converters-for-entities-with-java-generics/17343582#17343582-->
                <div>
                    <h:selectOneMenu value="#{backingBeanUser.current.culinaryLiking}" select2="true" styleClass="form-control"  converter="omnifaces.SelectItemsConverter">
                        <f:selectItem itemLabel="Favorisierte Küche" itemValue="" />
                        <f:selectItems value="#{backingBeanUser.getAllCulinaries()}" var="culi" itemValue="#{culi}" itemLabel="#{culi.getCategory()}"/>
                    </h:selectOneMenu>
                </div>

                <hr/>
                <h:commandButton action="#{backingBeanUser.saveUser()}" value="Speichern" class="btn btn-success" />
                <h:commandButton action="#{backingBeanUser.createNew()}" value="User anlegen" class="btn btn-primary" />
                <h:commandButton action="#{backingBeanUser.createNew()}" value="#Restaurantbesuch mit diesem User" class="btn btn-warning" />
            </h:form>



        </ui:define>

        <ui:define name="subContent">
            <h1>sub</h1>

        </ui:define>

        <ui:define name="footer">


        </ui:define>


    </ui:composition>
</html>